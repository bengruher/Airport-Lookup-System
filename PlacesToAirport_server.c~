/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "PlacesToAirport.h"
#include "kdtree.hpp"
#include <fstream>

using namespace std;
returnTypeA *
ptoa_1_svc(LatLon *argp, struct svc_req *rqstp)
{
    static returnTypeA  result;
	vector <char*> parseList;
	FILE *inFile;
	inFile = fopen(fileName, "r");
    //parseList.push_back("SEATTLE");
	while(inFile){
      char* word;
      fgets(word, 63, inFile);
      if(feof(inFile))
        break;
	  parseList.push_back(word);
	}
    
    airports** airportList;

    delete result.returnTypeA_u.resultA;
    airportList = &result.returnTypeA_u.resultA;

    (*airportList) = new airports();

    //bzero((*airportList)->name, 64);
    //bzero((*airportList)->code, 4);
    
    strncpy((*airportList)->name, parseList[0], 63);
    strncpy((*airportList)->code, "XXX", 3);
    strncpy((*airportList)->state, "XX", 2); 
    (*airportList)->dist = 2.22;
    (*airportList)->lat = argp->lat;
    (*airportList)->lon = argp->lon;

    //airports* nodeA = (*airportList);
    /*for(int i = 0; i < 5; i++){
      airports* temp;
      strncpy((*airportList)->name, "princeton", 63);
      strncpy((*airportList)->code, "SEA", 3);
      strncpy((*airportList)->state, "NJ", 2);
      (*airportList)->dist = 0.0 + i;
      temp = nodeA;
      nodeA = new airports();
      temp->next = nodeA;
      }
    */
    fclose(inFile);
    return &result;
}
